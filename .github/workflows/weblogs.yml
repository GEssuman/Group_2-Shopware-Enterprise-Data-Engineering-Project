name: Deploy weblogs and Push ECS Images

on:
  push:
    paths:
      - 'src/streaming/WEB/services/scripts/**'
      - 'src/streaming/WEB/services/docker/**'
      - 'src/streaming/WEB/services/ecs/**'
      - '.github/workflows/weblogs.yml'
    branches:
      - feature/weblogs

env:
  ECR_REPOSITORY: weblogs/api-gtp

jobs:
  build-and-push-ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install AWS CLI
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push validation Docker image
        run: |
          IMAGE_URI_API="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:api"
          docker build -t $IMAGE_URI_API -f src/streaming/WEB/services/docker/dockerfile.dockerfile-api src/streaming/WEB/services/
          docker push $IMAGE_URI_API
          echo "IMAGE_URI_API=$IMAGE_URI_API" > image_uris.txt

      - name: Upload image URIs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-uris
          path: image_uris.txt

  register-ecs-tasks:
    runs-on: ubuntu-latest
    needs: build-and-push-ecr
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download image URIs artifact
        uses: actions/download-artifact@v4
        with:
          name: image-uris

      - name: Load image URIs into environment
        run: |
          source image_uris.txt
          echo "IMAGE_URI_API=$IMAGE_URI_API" >> $GITHUB_ENV

      - name: Debug loaded image URIs
        run: echo "API Image URI:$IMAGE_URI_API"

      - name: Replace image URI in validation task definition
        run: |
          sed "s|\${IMAGE_URI_API}|$IMAGE_URI_API|g" src/streaming/WEB/services/ecs/api_taskdefinition.json > temp-validation.json
          sed "s|<ACCOUNT_ID>|${{ secrets.AWS_ACCOUNT_ID }}|g" temp-validation.json > temp-validation-2.json
          sed "s|\${AWS_REGION}|${AWS_REGION}|g" temp-validation-2.json > rendered-task-def-api.json

      - name: Register ECS task definition - api
        run: |
          aws ecs register-task-definition --cli-input-json file://rendered-task-def-api.json
